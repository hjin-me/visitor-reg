name: Build and Deploy
on:
  push:
    # Sequence of patterns matched against refs/heads
    # branches:
    #   - main         # Push events on master branch
    # Sequence of patterns matched against refs/tags
    tags:
      - "**"             # Push events to v1 tag
jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Publish to Registry
        id: publish
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: ${{ secrets.IMAGE_NAME }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_names: true
      - name: Save docker image name
        shell: bash
        run: |
          echo ${{ secrets.IMAGE_NAME }}:${{ steps.publish.outputs.tag }} > name.txt
      - name: Upload docker image name for deploy
        uses: actions/upload-artifact@v1
        with:
          name: image
          path: name.txt
#  deploy:
#    name: Deploy to Cluster
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Download docker image name
#        uses: actions/download-artifact@v1
#        with:
#          name: image
#      - name: Read docker image name
#        id: read
#        shell: bash
#        run: |
#          echo "::set-output name=image::`cat image/name.txt`"
#      - name: deploy to qingcloud cluster
#        # You may pin to the exact commit or the version.
#        # uses: steebchen/kubectl@bd911c0b014904226d4cbd571ec0f7b679c5bb7c
#        uses: steebchen/kubectl@v2.0.0
#        with:
#          # kubectl version, e.g. `v1.21.0`, defaults to latest
#          # version: # optional, default is latest
#          # kube config data
#          config: ${{ secrets.KUBE_CONFIG_DATA_Q }}
#          # kubectl command to run, without the kubectl, e.g. `get pods`
#          command: set image --record deployment/${{ secrets.KUBE_DEPLOY_NAME }} ${{ secrets.KUBE_CONTAINER_NAME }}=${{ steps.read.outputs.image }}
